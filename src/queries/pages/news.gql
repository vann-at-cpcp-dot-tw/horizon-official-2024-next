#import '../fragments/post.gql'

query QueryNewsPage(
  $first: Int
  $last: Int
  $after: String
  $before: String
  $relatedYachtSeries: String
  $categories: [String]
  $categoriesOperator: TaxQueryOperator = NOT_IN
  $language: LanguageCodeFilterEnum = EN
  $translation: LanguageCodeEnum = EN
) {
  posts(
    first: $first
 		last: $last,
    after: $after,
    before: $before,
    where: {
      orderby: {
        field: MENU_ORDER,
        order: ASC,
      }
      language: $language
      taxQuery: {
        relation: AND,
        taxArray: [
          {
            taxonomy: CATEGORY,
            field: SLUG,
            terms: ["uncategorized", "cover-story", "events"]
            operator: NOT_IN,
          },
          {
            taxonomy: CATEGORY,
            field: SLUG,
            terms: $categories,
            operator: $categoriesOperator,
          }
        ]
      }
      relatedYachtSeries: $relatedYachtSeries
    }
  ) {
    nodes {
      slug
      title
      date
      categories {
        nodes {
          slug
          name
          parentId
        }
      }
      postCustomFields {
        ...postGallery
        ...postRelatedYachts
      }
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
  categories(
    first: 99,
    where: {
      orderby: TERM_ORDER,
      order: ASC,
      language: $language
    }
  ) {
    nodes {
      slug
      name
    }
  }
  coverStory:category(id: "cover-story", idType: SLUG) {
    posts(first: 1) {
      nodes {
        translation(language: $translation){
          slug
          title
          date
          postCustomFields {
            ...postCoverImage
          }
        }
      }
    }
  }
  events:category(id: "events", idType: SLUG) {
    posts(first: 3) {
      nodes {
        translation(language: $translation){
          slug
          title
          date
          postCustomFields {
            ...postGallery
          }
        }
      }
    }
  }
  publicationCategory(id: "brand-publication", idType: SLUG) {
    publications(first: 1) {
      nodes {
        translation(language: $translation){
          publicationCustomFields {
            publication {
              publicationCover {
                node {
                  mediaItemUrl
                }
              }
              pdf {
                node {
                  mediaItemUrl
                }
              }
            }
          }
        }
      }
    }
  }
  newsPageSettings(language: $language) {
    ownerPerspective {
      description
      image {
        node {
          mediaItemUrl
        }
      }
    }
  }
}